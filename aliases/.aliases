#!/usr/bin/bash

alias ist='cd ~/Dropbox/Faculdade'
alias time='/usr/bin/time'
alias save='git add . ; git commit -m '
alias myip='curl ifconfig.me' # my external ip
alias octave='octave-cli'
alias svim='sudo vim'
alias push='pushd .'
alias pop='popd'
alias ud='yaourt -Syu'
alias cleanpackages='sudo pacman -Rns $(pacman -Qtdq)'
alias pwd_end_bit="pwd | sed 's#.*/##'"
alias pwd_from_within='echo $( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )'
alias fcrm='\rm -rf'
# alias webpd='wget -k -p -r' 
alias webpd='wget -np -N -E -k -p -r -l5'
alias xo='xdg-open'
alias mountsigma='sshfs ist425489@sigma.tecnico.ulisboa.pt:/afs/.ist.utl.pt/users/8/9/ist425489 ~/Documents/tecnicosigma -C'
alias umountsigma='fusermount -u ~/Documents/tecnicosigma'
alias check_network='nmap -sn 192.168.1.0/24'

# Specific stuff to a computer goes here
#{{{
function spec ()
{
    # Necessary procedure to protect user's hostname
    local NAME=$(hostname);
    local STRING=$(echo $NAME | sha1sum);
    local HASH=$(echo $STRING | head -n1 | awk '{print $1;}');
    case $HASH in
        2e11ce400c7286cd8a45a235dfeb28678a3e944f)
            alias go='gio open' 
            alias rm='gio trash'
    esac
}
spec   # And now we run the function
#}}}

# extract - archive extractor 
# usage: ex <file>
#{{{
function ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar)	    tar -xf $1					;;
      *.tar.xz)	    tar -xJf $1					;;
      *.txz)	    tar -xJf $1				        ;;
      *.tar.bz2)    tar -xjf $1					;;
      *.tbz2)	    tar -xjf $1					;;
      *.tar.gz)	    tar -xzf $1					;;
      *.tgz)	    tar -xzf $1					;;
      *.tar.pixz)   tar -Ipixz -xf $1				;;
      *.tpxz)	    tar -Ipixz -xf $1				;;
      *.xz)	    xz -d $1					;;
      *.pixz)	    pixz -d $1					;;
      *.gz)	    gunzip $1					;;
      *.bz2)	    bunzip2 $1					;;
      *.rar)	    unrar x $1					;;
      *.zip)	    unzip $1 -d $( echo  $1 | sed 's/.zip//' )	;;
      *.Z)	    uncompress $1				;;
      *.7z)	    7z -x $1					;;
      *)	    echo "'$1' cannot be extracted via ex"	;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
#}}}

# zip a directory
# usage - zipdir <directory>
# {{{
function zipdir()
{
    if [ -d $1 ] ; then
	zip
    fi
}
# }}}

# tsm - transmission-remote aliases
# usage - tsm ...
# {{{
# https://www.youtube.com/watch?v=ee4XzWuapsE
tsm() { transmission-remote --list ;}
	# numbers of ip being blocked by the blocklist
	# credit: smw from irc #transmission
tsm-clearcompleted() {
        transmission-remote -l | grep 100% | grep Done | \
        awk '{print $1}' | xargs -n 1 -I % transmission-remote -t % -r ;}
tsm-count() { echo "Blocklist rules:" $(curl -s --data \
	'{"method": "session-get"}' localhost:9091/transmission/rpc -H \
	"$(curl -s -D - localhost:9091/transmission/rpc | grep X-Transmission-Session-Id)" \
	| cut -d: -f 11 | cut -d, -f1) ;}
tsm-blocklist() { $PATH_SCRIPTS/blocklist.sh ;}		# update blocklist
tsm-daemon() { transmission-daemon ;}
tsm-quit() { killall transmission-daemon ;}
tsm-altspeedenable() { transmission-remote --alt-speed ;}	# limit bandwidth
tsm-altspeeddisable() {	transmission-remote --no-alt-speed ;}	# dont limit bandwidth
tsm-add() { transmission-remote --add "$1" ;}
tsm-askmorepeers() { transmission-remote -t"$1" --reannounce ;}
tsm-pause() { transmission-remote -t"$1" --stop ;}		# <id> or all
tsm-start() { transmission-remote -t"$1" --start ;}		# <id> or all
tsm-purge() { transmission-remote -t"$1" --remove-and-delete ;} # delete data also
tsm-remove() { transmission-remote -t"$1" --remove ;}		# leaves data alone
tsm-info() { transmission-remote -t"$1" --info ;}
tsm-speed() { while true;do clear; transmission-remote -t"$1" -i | grep Speed;sleep 1;done ;}
# }}}

# use vimpager when available for manpages
[ -f /usr/bin/vimpager ] && export MANPAGER=vimpager

# make files temporarily disappear
# usage - pushf <file>
#         popf 
# {{{
function pushf()
{
    mkdir -p ~/.push
    mv $1 ~/.push
}

function popf()
{
    if [ $(ls -1 ~/.push |wc -l ) -eq 1 ]; then
        mv  ~/.push/* .
        rmdir ~/.push
    fi
}
# }}}

# yt - youtube-dl aliases
# usage - yt [url]
# {{{
yt() { youtube-dl -F "$1" ;}
yt-720p30fps() { youtube-dl -f 247+171 "$1" ;}
yt-720p60fps() { youtube-dl -f 302+171 "$1" ;}
yt-180p30fps() { youtube-dl -f 248+171 "$1" ;}
yt-180p60fps() { youtube-dl -f 303+171 "$1" ;}
# }}}

# " vim:foldmethod=marker:foldlevel=0
