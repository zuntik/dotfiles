alias pwd_end_bit="pwd | sed 's#.*/##'"
alias pwd_from_within='echo $( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )'
# alias webpd='wget -k -p -r' 
alias webpd='wget -np -N -E -k -p -r -l5'
alias check_all_ports='sudo nmap -n -PN -sT -sU -p-'
alias matlab='matlab -nodisplay -nosplash'
alias start='sudo systemctl restart'
alias ustart='systemctl restart --user'
alias stop='sudo systemctl stop'
alias ustop='systemctl stop --user'
alias status='systemctl status'
alias statusu='systemctl status --user'
alias loop='watch -n 5'
alias diskspace='df -h'
alias filespace='du -sch'
alias rg='ranger --choosedir=$HOME/.local/share/rangerdir;cd "$(cat $HOME/.local/share/rangerdir)"'
alias allprocesses='ps axjf'
alias memcheck='valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all --track-origins=yes'

expand_cur_dir () { echo $( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd ) ;}

smpv () {
    #mpv --cache=2048 --ontop --no-border --force-window --autofit=500x280 --geometry=-15-50
    mpv --ontop --force-window --autofit=625x350 --geometry=-15-50 "$@";
}

# This function takes only 1 argument: either a file or a directory, and fixes
# it's permitions
fixpermitions () {
    if [ -d "$1" ]
    then
        chmod 755 "$1";
        cd $1 ;
        while read -r i ; do
            if [ -z $i  ] ; then  break; fi
            fixpermitions "$i"
        done <<< $(ls -A -1)
        cd ..;
    else
        chmod 644 "$1";
    fi
}

# Hilights a word without filtering
hl () { grep -E "^|$1" --color='always' ;}


# -------- extract - archive extractor {{{
# usage: ex <file>
function ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar)        tar -xf $1                  ;;
      *.tar.xz)     tar -xJf $1                 ;;
      *.txz)        tar -xJf $1                 ;;
      *.tar.bz2)    tar -xjf $1                 ;;
      *.tbz2)       tar -xjf $1                 ;;
      *.tar.gz)     tar -xzf $1                 ;;
      *.tgz)        tar -xzf $1                 ;;
      *.tar.pixz)   tar -Ipixz -xf $1           ;;
      *.tpxz)       tar -Ipixz -xf $1           ;;
      *.xz)         xz -d $1                    ;;
      *.pixz)       pixz -d $1                  ;;
      *.gz)         gunzip $1                   ;;
      *.bz2)        bunzip2 $1                  ;;
      *.rar)        unrar x $1                  ;;
      *.zip)        unzip $1 -d $(echo  $1 | sed 's/.zip//')  ;;
      *.Z)          uncompress $1               ;;
      *.7z)         7z x $1                     ;;
      *.jar)        
          dirname=$(echo  $1 | sed 's/.jar//');
          mkdir $dirname ;
          cp $1 $dirname ;
          cd $dirname ;
          jar xf $1 ;
          rm $1 ;
          cd ..                                 ;;
      *)            echo "'$1' cannot be extracted via ex"  ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
#}}}

# -------- zip a directory {{{ 
# usage - zipdir <directory>
function zipdir()
{
    if [ -d $1 ] ; then
    zip;
    fi
}
# }}}

# -------- tsm - transmission-remote aliases  {{{
# https://www.youtube.com/watch?v=ee4XzWuapsE
tsm() { transmission-remote --list ;}
    # numbers of ip being blocked by the blocklist
    # credit: smw from irc #transmission
tsm-loop() {  watch -n 5 "\
    transmission-remote --list ; [[ \$(transmission-remote --list) == *\"100%\"* ]] && notify-send download_complete \
";}
tsm-notfyifcomplete() {
    if [[ $(transmission-remote --list) == *"100%"* ]] ; then
        notify-send download_complete
    fi
}
tsm-clearcompleted() {
        transmission-remote -l | grep 100% | grep Done | \
        awk '{print $1}' | xargs -n 1 -I % transmission-remote -t % -r ;}
tsm-count() { echo "Blocklist rules:" $(curl -s --data \
    '{"method": "session-get"}' localhost:9091/transmission/rpc -H \
    "$(curl -s -D - localhost:9091/transmission/rpc | grep X-Transmission-Session-Id)" \
    | cut -d: -f 11 | cut -d, -f1) ;}
tsm-blocklist() { $PATH_SCRIPTS/blocklist.sh ;}     # update blocklist
tsm-daemon() { transmission-daemon ;}
tsm-quit() { killall transmission-daemon ;}
tsm-altspeedenable() { transmission-remote --alt-speed ;}   # limit bandwidth
tsm-altspeeddisable() { transmission-remote --no-alt-speed ;}   # dont limit bandwidth
tsm-add() { transmission-remote --add "$1" ;}
tsm-add-here () { transmission-remote -w $(expand_cur_dir) --add "$1" }
tsm-askmorepeers() { transmission-remote -t"$1" --reannounce ;}
tsm-pause() { transmission-remote -t"$1" --stop ;}      # <id> or all
tsm-start() { transmission-remote -t"$1" --start ;}     # <id> or all
tsm-purge() { transmission-remote -t"$1" --remove-and-delete ;} # delete data also
tsm-remove() { transmission-remote -t"$1" --remove ;}       # leaves data alone
tsm-info() { transmission-remote -t"$1" --info ;}
tsm-speed() { while true;do clear; transmission-remote -t"$1" -i | grep Speed;sleep 1;done ;}
# }}}

#-------- Acestream CLI (Streaming P2P Videos) {{{
#------------------------------------------------------
# DEMO: https://www.youtube.com/watch?v=dxar7KLsrg8
# DESC: view streaming videos using acestream live feeds
# LINK: https://github.com/jonian/acestream-launcher
# FEED: https://www.google.com/#q=acestream://&tbs=qdr:w
#       http://www.acesoplisting.in/
#       http://arenavision.in/
#       http://streams.magazinmixt.ro/
#       http://www.livefootballol.me/acestream-channel-list-2016-1.html

acestream-cvlc() { acestream-launcher --player cvlc "$@" ;}
acestream-mpv() { acestream-launcher --player mpv "$@" ;}
acestream-mplayer() { acestream-launcher --player mplayer "$@" ;}
# }}}


# usermount

usermount-iso() { udevil mount "$1" ;}
userumount-iso() { udevil unmount "$1" ;}
usermount-usb() { udisksctl mount -b "$1" ;}
usermount-usb() { udisksctl unmount -b "$1" ;}

# aspell
spellchk-tex-pt() { for i in "$@"; do aspell -t --lang=pt_PT -c "$i";done; }
spellchk-plain-pt() { for i in "$@"; do aspell --lang=pt_PT -c "$i";done; }
spellchk-plain-de() { for i in "$@"; do aspell --lang=de_DE -c "$i";done; }


beep() { play -qn synth sin G5 trim 0 1; }

# beeps after n minutes
timer-silent() {
    seconds=$1
    let "seconds*=60"
    sleep $seconds ;
    notify-send timer
}
timer-loud() {
    seconds=$1;
    let "seconds*=60";
    sleep $seconds ;
    notify-send timer;
    beep;
}
timer-loop-silent() {  
    seconds=$1
    let "seconds*=60"
    watch -n $seconds "\
    notify-send loop timer \
";}


markdownview() {
    pandoc $1 | lynx -stdin ;
}


activate-anaconda() {
    source /opt/anaconda/bin/activate ;
}

# cleaning aliases
clean-latex() {
    touch .dummy .dummy2;
    ls $( ls -1 | grep '.aux\|.out\|.log') .dummy .dummy2;
    \rm -I $( ls | grep '.aux\|.out\|.log') .dummy .dummy2 ;
}

sans() {
    echo "
░░░░░▄▄▀▀▀▀▀▀▀▀▀▄▄░░░░░
░░░░█░░░░░░░░░░░░░█░░░░
░░░█░░░░░░░░░░▄▄▄░░█░░░
░░░█░░▄▄▄░░▄░░███░░█░░░
░░░▄█░▄░░░▀▀▀░░░▄░█▄░░░
░░░█░░▀█▀█▀█▀█▀█▀░░█░░░
░░░▄██▄▄▀▀▀▀▀▀▀▄▄██▄░░░
░▄█░█▀▀█▀▀▀█▀▀▀█▀▀█░█▄░
▄▀░▄▄▀▄▄▀▀▀▄▀▀▀▄▄▀▄▄░▀▄
█░░░░▀▄░█▄░░░▄█░▄▀░░░░█
░▀▄▄░█░░█▄▄▄▄▄█░░█░▄▄▀░
░░░▀██▄▄███████▄▄██▀░░░
░░░████████▀████████░░░
░░▄▄█▀▀▀▀█░░░█▀▀▀▀█▄▄░░
░░▀▄▄▄▄▄▀▀░░░▀▀▄▄▄▄▄▀░░
    ";
}


# for 
#https://stackoverflow.com/questions/26109837/convert-flac-to-mp3-with-ffmpeg-keeping-all-metadata#26109838


# " vim:foldmethod=marker:foldlevel=0:filetype=sh

