" ----------------------USABILITY CONFIGURATION----------------------
" -------------------------------------------------------------------
"  Basic and pretty much needed settings to provide a solid base for
"  source code editting
" {{{

" To set enumerations
" set number

" Turn on syntax highlighting
syntax on
"highlight matching
set showmatch

" http://tedlogan.com/techblog3.html
" indentation
set autoindent	  " autoindent based on line above
set smartindent   " smarter indent for C-like languages
set shiftwidth=4  " when reading, tabs are 4 spaces
set softtabstop=4 " in insert mode, tabs are 4 spaces
set expandtab	  " new tabs make spaces

" search settings
set incsearch	  " find the next match as we type the search
set hlsearch	  " hilight searches by default


" reload files changed outside vim
set autoread 

" encoding is utf 8
set encoding=utf-8
set fileencoding=utf-8

"visual autocomplete for command menu
set wildmenu		

" suggestion for normal mode commands
" set wildmode=list:longest

"activate mouse
set mouse=a 

" Allow vim to use system clipboard as default
let &clipboard = has('unnamedplus') ? 'unnamedplus' : 'unnamed'

if has("gui_running")
    set guioptions-=m "remove menu bar
    set guioptions-=T "remove toolbar
    set guioptions-=r "remove right-hand scroll bar
    set guioptions-=L "remove left-hand scroll bar
    colorscheme slate
end

" remove the .ext~ files, but not the swapfiles
if !isdirectory($HOME."/.vim/backup")
    call mkdir($HOME."/.vim/backup", "p")
endif
if !isdirectory($HOME."/.vim/swp")
    call mkdir($HOME."/.vim/swp", "p")
endif
set backupdir=~/.vim/backup//
set directory=~/.vim/swp//

" Always show tabline
" set showtabline=2

" keep the cursor visible within 3 lines when scrolling
set scrolloff=5

set foldenable
set foldmethod=indent   " fold based on indent level
" set foldmethod=marker   " fold based on markers 
set foldnestmax=10      " 10 nested fold max
set foldlevelstart=10   " have most fold open by default

set ignorecase
set smartcase

" by default, in insert mode backspace won't delete over line breaks, or
" automatically-inserted indentation, let's change that
set backspace=indent,eol,start

" dont't unload buffers when they are abandoned, instead stay in the background
set hidden

" Jump to the last position when reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
	\| exe "normal! g'\"" | endif
endif

set t_RS= t_RC= t_SH=

" Keep undo history across sessions by storing it in a file
if has('persistent_undo')
    let undo_dir = expand('$HOME/.vim/undo_dir')
    if !isdirectory(undo_dir)
        call mkdir(undo_dir, "", 0700)
    endif
    set undodir=$HOME/.vim/undo_dir
    set undofile
endif

" show command in bottom bar
" set showcmd

" Key mappings settings
" http://vim.wikia.com/wiki/Mapping_keys_in_Vim_-_Tutorial_(Part_1)

" }}}


" -----------------------PLUGIN CONFIGURATION------------------------
" -------------------------------------------------------------------
" Plugin list and settings are here
" {{{

call plug#begin('~/.vim/bundle')

Plug 'honza/vim-snippets'
Plug 'ajh17/VimCompletesMe'

" http://vimawesome.com/plugin/vim-snippets
Plug 'honza/vim-snippets'

Plug 'SirVer/ultisnips'

" https://github.com/tpope/vim-eunuch
Plug 'tpope/vim-eunuch'	

" http://vimawesome.com/plugin/vim-latex-live-preview
Plug 'xuhdev/vim-latex-live-preview'

" https://vimawesome.com/plugin/fugitive-vim
Plug 'tpope/vim-fugitive'

" https://github.com/tpope/vim-rhubarb
Plug 'tpope/vim-rhubarb'

" https://github.com/airblade/vim-gitgutter
Plug 'airblade/vim-gitgutter'

Plug 'itchyny/lightline.vim'

" http://vimawesome.com/plugin/vim-closetag
Plug 'alvan/vim-closetag'

" Initialize plugin system
call plug#end()

" Plugin configuration

" lightline

" set lightline to include git-branch
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ,
      \             [ 'venv', 'readonly'] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'fugitive#head',
      \   'venv': 'virtualenv#statusline'
      \ },
      \ }

" Always show statusbar
set laststatus=2

"ultisnips
let g:UltiSnipsExpandTrigger='<c-j>'
let g:UltiSnipsJumpForwardTrigger='<c-j>'
let g:UltiSnipsJumpBackwardTrigger="<c-k>"

" vim-latex-live-preview
let g:livepreview_previewer = 'zathura'

" indent-guides
let g:indent_guides_start_level = 1
let g:indent_guides_enable_on_vim_startup = 1

" colorscheme delek
colorscheme desert
" colorscheme koehler
" colorscheme slate

" Git gutter
" let g:gitgutter_enabled = 0
let g:gitgutter_signs = 0


" vim-closetag

" filenames like *.xml, *.html, *.xhtml, ...
" Then after you press > in these files, this plugin will try to close the current tag.
"
let g:closetag_filenames = '*.html,*.xhtml,*.phtml'

" filenames like *.xml, *.xhtml, ...
" This will make the list of non closing tags self closing in the specified files.
"
let g:closetag_xhtml_filenames = '*.xhtml,*.jsx'

" integer value [0|1]
" This will make the list of non closing tags case sensitive (e.g. `<Link>` will be closed while `<link>` won't.)
"
let g:closetag_emptyTags_caseSensitive = 1

" Shortcut for closing tags, default is '>'
"
let g:closetag_shortcut = '>'

" Add > at current position without closing the current tag, default is ''
"
let g:closetag_close_shortcut = '<leader>>'



" Maybies:
" http://vimawesome.com/plugin/c-vim-the-thing-itself
" http://vimawesome.com/plugin/repeat-vim
" http://vimawesome.com/plugin/emmet-vim
" http://vimawesome.com/plugin/nerdtree-red
" http://vimawesome.com/plugin/ragtag-vim
" https://github.com/jelera/vim-javascript-syntax
" http://www.vim.org/scripts/script.php?script_id=152
" http://www.vim.org/scripts/script.php?script_id=474
" http://vim-taglist.sourceforge.net/
" http://www.vim.org/scripts/script.php?script_id=1218
" http://vimawesome.com/plugin/syntastic
" http://vimawesome.com/plugin/autoclose
" http://vimawesome.com/plugin/supertab
" https://github.com/octol/vim-cpp-enhanced-highlight
" http://vimawesome.com/plugin/vim-javascript
" https://github.com/vim-airline/vim-airline
" http://vimawesome.com/plugin/indent-guides

" }}}


" vim:foldmethod=marker:foldlevel=0
